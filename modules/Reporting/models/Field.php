<?php
/**
 * This file is part of the IT-Solutions4You CRM Software.
 *
 * (c) IT-Solutions4You s.r.o [info@its4you.sk]
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

class Reporting_Field_Model extends Vtiger_Field_Model
{
    public $module;
    public static array $fullWidth = ['report_type', 'primary_module', 'fields', 'sort_by', 'calculation', 'labels', 'filter', 'sharing'];
    public static array $customWidth = ['fields', 'labels', 'filter', 'calculation', 'sort_by', 'width', 'align'];
    public static array $disabledAjaxEditable = ['report_type', 'primary_module', 'fields', 'sort_by', 'calculation', 'labels', 'filter'];
    public static array $halfWidth = ['description'];

    /**
     * @throws Exception
     */
    public function getPicklistValues()
    {
        return match ($this->get('name')) {
            'primary_module' => $this->getPrimaryModuleOptions(),
            'folder' => $this->getDocumentFolders(),
            'sharing' => $this->getSharingOptions(),
            default => parent::getPicklistValues(),
        };
    }

    public function getFieldDataType()
    {
        return match ($this->get('name')) {
            'fields' => 'fields',
            'labels' => 'labels',
            'sort_by' => 'sorts',
            'calculation' => 'calculations',
            'filter' => 'filters',
            'width' => 'width',
            'align' => 'align',
            default => parent::getFieldDataType(),
        };
    }

    /**
     * @return bool
     */
    public function isAjaxEditable()
    {
        if (in_array($this->getName(), self::$disabledAjaxEditable)) {
            return false;
        }

        return parent::isAjaxEditable(); // TODO: Change the autogenerated stub
    }

    public function isTableFullWidth(): bool
    {
        if (in_array($this->getName(), self::$fullWidth)) {
            return true;
        }

        if (in_array($this->getName(), self::$halfWidth)) {
            return false;
        }

        return parent::isTableFullWidth();
    }

    public function isTableCustomWidth(): bool
    {
        return in_array($this->getName(), self::$customWidth);
    }

    public function getDisplayValue($value, $record = false, $recordInstance = false)
    {
        if('folder' === $this->getName()) {
            return $this->getDocumentFolders()[$value];
        }

        return parent::getDisplayValue($value, $record, $recordInstance); // TODO: Change the autogenerated stub
    }

    /**
     * @throws Exception
     */
    public function getEditablePicklistValues()
    {
        return match ($this->get('name')) {
            'primary_module' => $this->getPrimaryModuleOptions(),
            'folder' => $this->getDocumentFolders(),
            'sharing' => $this->getSharingOptions(),
            default => parent::getEditablePicklistValues(),
        };
    }

    public function getPrimaryModuleOptions(): array
    {
        $modules = Vtiger_Module_Model::getEntityModules();
        $option = [];

        foreach ($modules as $module) {
            $moduleName = $module->getName();
            $option[$moduleName] = vtranslate($moduleName, $moduleName);
        }

        return $option;
    }

    public function getSharingOptions(): array
    {
        $sharing = new Core_SharingRecord_Model();
        $members = $sharing->getMembersOptions();
        $options = [];

        foreach ($members as $memberType => $memberRecords) {
            foreach ($memberRecords as $member) {
                $options[$member->get('id')] = vtranslate($memberType) . ': ' . $member->get('name');
            }
        }

        return $options;
    }
}